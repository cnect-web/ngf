<?php

/**
 * @file
 * Contains ngf_user_profile.module.
 */

use Drupal\Core\Entity\Entity\EntityFormDisplay;
use Drupal\node\Entity\Node;
use Drupal\message\Entity\Message;
use Drupal\comment\Entity\Comment;

/**
 * Implements hook_form_alter().
 */
function ngf_user_profile_form_user_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // This hook gets called as base form id hook for forms like the user register
  // one, so we need to double check the form id.
   if ($form_id !== 'user_form') {
     return;
   }

//   var_dump($form['field_ngf_country']);
//    var_dump($form);
//   exit();
}



function ngf_user_profile_entity_form_display_alter(\Drupal\Core\Entity\Display\EntityFormDisplayInterface $form_display, array $context) {
//
//    var_dump($form_display);
//    exit();
//    var_dump($context);
//    var_dump($form_display);
//    exit();
}

/**
 * Implements hook_node_insert().
 */
function ngf_user_profile_node_insert(Node $node) {
  if (in_array($node->getType(), ['ngf_discussion', 'ngf_event'])) {
    $notification_manager = \Drupal::getContainer()->get('ngf_user_profile.notification_manager');
    $notification_manager->notifyFollowersAboutNewContent($node);
  }
}

/**
 * Implements hook_comment_insert().
 */
function ngf_user_profile_comment_insert(Comment $comment) {
  if (in_array($comment->getCommentedEntity()->getType(), ['ngf_discussion', 'ngf_event'])) {
    $notification_manager = \Drupal::getContainer()->get('ngf_user_profile.notification_manager');
    $notification_manager->notifyOwnerAboutNewComment($comment);
  }
}
