<?php
use Drupal\taxonomy\TermInterface;
/**
 * @file
 * Contains ngf_content.module.
 */

/**
 * Implements hook_form_alter().
 */
function ngf_content_form_group_ngf_event_add_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // NGF-65 : Set default tex for registration link and make the field readonly.
  $form['field_ngf_registration_link']['widget'][0]['title']['#attributes']['readonly'] = 'readonly';
  $form['field_ngf_registration_link']['widget'][0]['title']['#value'] = t('Register');

  // Add additional validation for end date.
  $form['field_ngf_event_end_date']['#element_validate'][] = '_ngf_content_event_end_date_validate';
}

/**
 * Validates end date.
 *
 * @param $element
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function _ngf_content_event_end_date_validate($element, &$form_state) {
  // NGF-67: Start date can't be greater than End date.
  $start_date = NULL;
  if (!empty($form_state->getValue('field_ngf_event_start_date')[0]['value'])) {
    $start_date = $form_state->getValue('field_ngf_event_start_date')[0]['value']->getTimestamp();
  }
  $end_date = NULL;
  if (!empty($form_state->getValue('field_ngf_event_end_date')[0]['value'])) {
    $end_date = $form_state->getValue('field_ngf_event_end_date')[0]['value']->getTimestamp();
  }

  if (!empty($end_date) && !empty($start_date) && $start_date > $end_date) {
    $form_state->setError(
      $element,
      t('The event start date %start_date must be greater than the event end date %end_date.', [
        '%start_date' => $form_state->getValue('field_ngf_event_start_date')[0]['value']->format('Y-m-d H:i:s'),
        '%end_date' => $form_state->getValue('field_ngf_event_end_date')[0]['value']->format('Y-m-d H:i:s'),
      ])
    );
  }
}

/**
 * Implements hook_taxonomy_term_insert().
 */
function ngf_content_taxonomy_term_insert(TermInterface $term) {
  if ($term->bundle() == 'ngf_interests') {
    $term->set('field_ngf_creator', \Drupal::currentUser()->id());
    $term->save();
  }
}
